import numpy as np
import cv2
import glob
from PIL import Image
import matplotlib.pyplot as plt
import torch
import torchvision.transforms as transforms
import torch.nn.functional as F
import math
import seaborn as sns
from tqdm import tqdm

def plot_acc(save_path, acc_train, acc_test):
    save_path = save_path + '/acc.png'

    plt.plot(acc_train, label='train_acc')
    plt.plot(acc_test, label='test_acc')
    plt.xlabel('epoch')
    plt.ylabel('acc')
    plt.title('Accuracy of Train and Test value')
    plt.legend()
    plt.savefig(save_path)
    plt.clf()


def plot_loss(save_path, loss_train, loss_test):
    save_path = save_path + '/loss.png'

    plt.plot(loss_train, label='train_loss')
    plt.plot(loss_test, label='test_loss')
    plt.xlabel('epoch')
    plt.ylabel('loss')
    plt.title('Loss of Train and Test value')
    plt.legend()
    plt.savefig(save_path)
    plt.clf()

def plot_number_of_class(paths):
    import matplotlib.pyplot as plt
    classes = {}
    for path in glob.glob(paths + '/*'):
        classes[path.replace(paths + '\\', '')] = len(glob.glob(path + '/*'))

    fig = plt.figure(figsize=(10, 10))

    k = list(classes.keys())
    v = list(classes.values())
    # creating the bar plot
    plt.bar(k, v, color='blue', width=0.7)

    plt.xlabel("Ransomware and Other Malware")
    plt.ylabel('Number of Ransomware and Other Malware')
    plt.title("Dataset Ransomware and Other Malware")
    plt.savefig('../eval_data/Number of Ransomware and Benign.png')
    plt.show()

def plot_wh_distribution(paths):
    list_w = []
    list_h = []
    for path in glob.glob(paths + '/*'):
        for image_path in glob.glob(path + '/*'):
            image = cv2.imread(image_path)
            print(image.shape)
            h, w, _ = image.shape
            list_w += [w]
            list_h += [h]
    g = sns.jointplot(list_w, list_h)
    g.plot_joint(sns.kdeplot, color="r", zorder=0, levels=10)
    g.plot_marginals(sns.rugplot, color="r", height=-.1, clip_on=False)
    plt.savefig('../eval_data/wh_distribution_Ransomware_And_Benign.png')
    plt.show()

if __name__ == '__main__':
    plot_number_of_class('D:/dataset/RGB/RansomeAndBenign')